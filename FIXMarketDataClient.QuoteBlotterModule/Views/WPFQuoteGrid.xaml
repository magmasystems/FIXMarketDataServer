<UserControl x:Class="FIXMarketDataClient.EquityQuoteBlotterModule.Views.WPFQuoteGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ValueConverters="clr-namespace:MagmaTrader.Presentation.ValueConverters;assembly=MagmaTrader.Presentation" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500">
    <UserControl.Resources>
        <!-- I grabbed a theme from Codeplex.          -->
        <!-- http://datagridthemesfromsl.codeplex.com/ -->
        <ResourceDictionary Source="/DataGridThemes;component/ExpressionDark.xaml" />
    </UserControl.Resources>

    <Grid>
        <DataGrid AutoGenerateColumns="False" 
                  GridLinesVisibility="All"
                  Height="Auto"
                  VerticalAlignment="Stretch"
                  Name="gridQuoteCacheWPF"
                  MouseDoubleClick="OnMouseDoubleClick"
                  ItemsSource="{Binding TheQuotes}" SelectionUnit="FullRow">

            <DataGrid.Resources>
                <!-- Value converter from a price change to a color -->
                <ValueConverters:PriceChangeToColorValueConverter x:Key="priceChangeToColorConverter" />

                <Style x:Key="QuoteCellStyle" TargetType="{x:Type DataGridCell}">
                </Style>
                <Style x:Key="EditableQuoteCellStyle" BasedOn="{StaticResource QuoteCellStyle}" TargetType="{x:Type DataGridCell}">
                    <EventSetter Event="LostFocus" Handler="OnSymbolCellLostFocus" />
                </Style>
                <Style x:Key="BidPriceCellStyle" BasedOn="{StaticResource QuoteCellStyle}" TargetType="{x:Type DataGridCell}">
                    <Setter Property="DataGridTextColumn.Foreground" Value="{Binding Path=BidChange, Converter={StaticResource priceChangeToColorConverter}}"/>
                </Style>
                <Style x:Key="AskPriceCellStyle" BasedOn="{StaticResource QuoteCellStyle}" TargetType="{x:Type DataGridCell}">
                    <Setter Property="DataGridTextColumn.Foreground" Value="{Binding Path=AskChange, Converter={StaticResource priceChangeToColorConverter}}"/>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <!-- Let the user input a new symbol. We force the symbol to be uppercase. -->
                <DataGridTextColumn Binding="{Binding Symbol}"                            Header="Symbol"   Width="100" CellStyle="{StaticResource EditableQuoteCellStyle}" IsReadOnly="False">
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="CharacterCasing" Value="Upper"/>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
                
                <DataGridTextColumn Binding="{Binding BidSize}"                           Header="BidSize"  Width="100" CellStyle="{StaticResource QuoteCellStyle}"     IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding Bid, StringFormat={}{0:00.00}}"     Header="Bid"      Width="100" CellStyle="{StaticResource BidPriceCellStyle}"  IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding Ask, StringFormat={}{0:00.00}}"     Header="Ask"      Width="100" CellStyle="{StaticResource AskPriceCellStyle}"  IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding AskSize}"                           Header="AskSize"  Width="100" CellStyle="{StaticResource QuoteCellStyle}"     IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
